// Code generated by MockGen. DO NOT EDIT.
// Source: scraper.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNodesStatsScrapper is a mock of NodesStatsScrapper interface.
type MockNodesStatsScrapper struct {
	ctrl     *gomock.Controller
	recorder *MockNodesStatsScrapperMockRecorder
}

// MockNodesStatsScrapperMockRecorder is the mock recorder for MockNodesStatsScrapper.
type MockNodesStatsScrapperMockRecorder struct {
	mock *MockNodesStatsScrapper
}

// NewMockNodesStatsScrapper creates a new mock instance.
func NewMockNodesStatsScrapper(ctrl *gomock.Controller) *MockNodesStatsScrapper {
	mock := &MockNodesStatsScrapper{ctrl: ctrl}
	mock.recorder = &MockNodesStatsScrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNodesStatsScrapper) EXPECT() *MockNodesStatsScrapperMockRecorder {
	return m.recorder
}

// ScrapeNodeStats mocks base method.
func (m *MockNodesStatsScrapper) ScrapeNodeStats() (nodesWithStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ScrapeNodeStats")
	ret0, _ := ret[0].(nodesWithStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ScrapeNodeStats indicates an expected call of ScrapeNodeStats.
func (mr *MockNodesStatsScrapperMockRecorder) ScrapeNodeStats() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ScrapeNodeStats", reflect.TypeOf((*MockNodesStatsScrapper)(nil).ScrapeNodeStats))
}
